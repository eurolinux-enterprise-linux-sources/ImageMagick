diff -up ImageMagick-6.5.4-7/magick/profile.c.cve-2012-0247-0248 ImageMagick-6.5.4-7/magick/profile.c
--- ImageMagick-6.5.4-7/magick/profile.c.cve-2012-0247-0248	2009-06-29 01:51:28.000000000 +0200
+++ ImageMagick-6.5.4-7/magick/profile.c	2012-03-13 11:14:40.000000000 +0100
@@ -1638,6 +1638,9 @@ MagickExport MagickBooleanType SyncImage
   size_t
     length;
 
+  SplayTreeInfo
+    *exif_resources;
+
   ssize_t
     offset;
 
@@ -1695,12 +1698,14 @@ MagickExport MagickBooleanType SyncImage
   /*
     This the offset to the first IFD.
   */
-  offset=(ssize_t) ReadProfileLong(endian,exif+4);
-  if ((size_t) offset >= length)
+  offset=(ssize_t) ((int) ReadProfileLong(endian,exif+4));
+  if ((offset < 0) || ((size_t) offset >= length))
     return(MagickFalse);
   directory=exif+offset;
   level=0;
   entry=0;
+  exif_resources=NewSplayTree((int (*)(const void *,const void *)) NULL,
+    (void *(*)(void *)) NULL,(void *(*)(void *)) NULL);
   do
   {
     if (level > 0)
@@ -1728,6 +1733,9 @@ MagickExport MagickBooleanType SyncImage
         number_bytes;
 
       q=(unsigned char *) (directory+2+(12*entry));
+      if (GetValueFromSplayTree(exif_resources,q) == q)
+        break;
+      (void) AddValueToSplayTree(exif_resources,q,q);
       tag_value=(long) ReadProfileShort(endian,q);
       format=(long) ReadProfileShort(endian,q+2);
       if ((format-1) >= EXIF_NUM_FORMATS)
@@ -1744,7 +1752,9 @@ MagickExport MagickBooleanType SyncImage
           /*
             The directory entry contains an offset.
           */
-          offset=(ssize_t) ReadProfileLong(endian,q+8);
+          offset=(ssize_t) ((int) ReadProfileLong(endian,q+8));
+          if ((offset+number_bytes) < (size_t) offset)
+            continue;  /* prevent overflow */
           if ((size_t) (offset+number_bytes) > length)
             continue;
           p=(unsigned char *) (exif+offset);
@@ -1783,11 +1793,11 @@ MagickExport MagickBooleanType SyncImage
       }
       if ((tag_value == TAG_EXIF_OFFSET) || (tag_value == TAG_INTEROP_OFFSET))
         {
-          size_t
+          ssize_t
             offset;
 
-          offset=(size_t) ReadProfileLong(endian,p);
-          if ((offset < length) && (level < (MaxDirectoryStack-2)))
+          offset=(ssize_t) ((int) ReadProfileLong(endian,p));
+          if (((size_t) offset < length) && (level < (MaxDirectoryStack-2)))
             {
               directory_stack[level].directory=directory;
               entry++;
@@ -1798,9 +1808,9 @@ MagickExport MagickBooleanType SyncImage
               level++;
               if ((directory+2+(12*number_entries)) > (exif+length))
                 break;
-              offset=(size_t) ReadProfileLong(endian,directory+2+(12*
-                number_entries));
-              if ((offset != 0) && (offset < length) &&
+              offset=(ssize_t) ((int) ReadProfileLong(endian,directory+2+(12*
+                number_entries)));
+              if ((offset != 0) && ((size_t) offset < length) &&
                   (level < (MaxDirectoryStack-2)))
                 {
                   directory_stack[level].directory=exif+offset;
@@ -1812,5 +1822,6 @@ MagickExport MagickBooleanType SyncImage
         }
     }
   } while (level > 0);
+  exif_resources=DestroySplayTree(exif_resources);
   return(MagickTrue);
 }
diff -up ImageMagick-6.5.4-7/magick/property.c.cve-2012-0247-0248 ImageMagick-6.5.4-7/magick/property.c
--- ImageMagick-6.5.4-7/magick/property.c.cve-2012-0247-0248	2009-06-29 19:15:24.000000000 +0200
+++ ImageMagick-6.5.4-7/magick/property.c	2012-03-13 11:13:44.000000000 +0100
@@ -453,6 +453,13 @@ static inline long MagickMax(const long 
   return(y);
 }
 
+static inline long MagickMin(const ssize_t x,const ssize_t y)
+{
+  if (x < y)
+    return(x);
+  return(y);
+}
+
 static inline int ReadPropertyByte(const unsigned char **p,size_t *length)
 {
   int
@@ -587,7 +594,7 @@ static MagickBooleanType Get8BIMProperty
       continue;
     if (ReadPropertyByte(&info,&length) != (unsigned char) 'M')
       continue;
-    id=(long) ReadPropertyMSBShort(&info,&length);
+    id=(long) ((int) ReadPropertyMSBShort(&info,&length));
     if (id < start)
       continue;
     if (id > stop)
@@ -610,7 +617,7 @@ static MagickBooleanType Get8BIMProperty
       }
     if ((count & 0x01) == 0)
       (void) ReadPropertyByte(&info,&length);
-    count=(ssize_t) ReadPropertyMSBLong(&info,&length);
+    count=(ssize_t) ((int) ReadPropertyMSBLong(&info,&length));
     if ((*name != '\0') && (*name != '#'))
       if ((resource == (char *) NULL) || (LocaleCompare(name,resource) != 0))
         {
@@ -618,7 +625,7 @@ static MagickBooleanType Get8BIMProperty
             No name match, scroll forward and try next.
           */
           info+=count;
-          length-=count;
+          length-=MagickMin(count,(ssize_t) length);
           continue;
         }
     if ((*name == '#') && (sub_number != 1))
@@ -628,7 +635,7 @@ static MagickBooleanType Get8BIMProperty
         */
         sub_number--;
         info+=count;
-        length-=count;
+        length-=MagickMin(count,(ssize_t) length);
         continue;
       }
     /*
@@ -643,7 +650,7 @@ static MagickBooleanType Get8BIMProperty
         (void) CopyMagickMemory(attribute,(char *) info,(size_t) count);
         attribute[count]='\0';
         info+=count;
-        length-=count;
+        length-=MagickMin(count,(ssize_t) length);
         if ((id <= 1999) || (id >= 2999))
           (void) SetImageProperty((Image *) image,key,(const char *)
             attribute);
@@ -1083,6 +1090,9 @@ static MagickBooleanType GetEXIFProperty
   EndianType
     endian;
 
+  SplayTreeInfo
+    *exif_resources;
+
   long
     all,
     id,
@@ -1217,7 +1227,7 @@ static MagickBooleanType GetEXIFProperty
   }
   if (length < 16)
     return(MagickFalse);
-  id=(long) ReadPropertyShort(LSBEndian,exif);
+  id=(long) ((int) ReadPropertyShort(LSBEndian,exif));
   endian=LSBEndian;
   if (id == 0x4949)
     endian=LSBEndian;
@@ -1231,8 +1241,8 @@ static MagickBooleanType GetEXIFProperty
   /*
     This the offset to the first IFD.
   */
-  offset=(ssize_t) ReadPropertyLong(endian,exif+4);
-  if ((size_t) offset >= length)
+  offset=(ssize_t) ((int) ReadPropertyLong(endian,exif+4));
+  if ((offset < 0) || (size_t) offset >= length)
     return(MagickFalse);
   /*
     Set the pointer to the first IFD and follow it were it leads.
@@ -1241,6 +1251,8 @@ static MagickBooleanType GetEXIFProperty
   level=0;
   entry=0;
   tag_offset=0;
+  exif_resources=NewSplayTree((int (*)(const void *,const void *)) NULL,
+    (void *(*)(void *)) NULL,(void *(*)(void *)) NULL);
   do
   {
     /*
@@ -1256,7 +1268,7 @@ static MagickBooleanType GetEXIFProperty
     /*
       Determine how many entries there are in the current IFD.
     */
-    number_entries=ReadPropertyShort(endian,directory);
+    number_entries=(size_t) ((int) ReadPropertyShort(endian,directory));
     for ( ; entry < number_entries; entry++)
     {
       long
@@ -1273,11 +1285,14 @@ static MagickBooleanType GetEXIFProperty
         format;
 
       q=(unsigned char *) (directory+2+(12*entry));
-      tag_value=(long) ReadPropertyShort(endian,q)+tag_offset;
-      format=(unsigned long) ReadPropertyShort(endian,q+2);
+      if (GetValueFromSplayTree(exif_resources,q) == q)
+        break;
+      (void) AddValueToSplayTree(exif_resources,q,q);
+      tag_value=(long) ((int) ReadPropertyShort(endian,q)+tag_offset);
+      format=(unsigned long) ((int) ReadPropertyShort(endian,q+2));
       if (format >= (sizeof(tag_bytes)/sizeof(*tag_bytes)))
         break;
-      components=(long) ReadPropertyLong(endian,q+4);
+      components=(long) ((int) ReadPropertyLong(endian,q+4));
       number_bytes=(size_t) components*tag_bytes[format];
       if (number_bytes <= 4)
         p=q+8;
@@ -1289,7 +1304,9 @@ static MagickBooleanType GetEXIFProperty
           /*
             The directory entry contains an offset.
           */
-          offset=(ssize_t) ReadPropertyLong(endian,q+8);
+          offset=(ssize_t) ((int) ReadPropertyLong(endian,q+8));
+          if ((offset+number_bytes) < (size_t) offset)
+            continue;  /* prevent overflow */
           if ((size_t) (offset+number_bytes) > length)
             continue;
           p=(unsigned char *) (exif+offset);
@@ -1440,11 +1457,11 @@ static MagickBooleanType GetEXIFProperty
             (tag_value == TAG_INTEROP_OFFSET) ||
             (tag_value == TAG_GPS_OFFSET))
           {
-            size_t
+            ssize_t
               offset;
 
-            offset=(size_t) ReadPropertyLong(endian,p);
-            if ((offset < length) && (level < (MaxDirectoryStack-2)))
+            offset=(ssize_t) ((int) ReadPropertyLong(endian,p));
+            if (((size_t) offset < length) && (level < (MaxDirectoryStack-2)))
               {
                 unsigned long
                   tag_offset1;
@@ -1461,9 +1478,9 @@ static MagickBooleanType GetEXIFProperty
                 level++;
                 if ((directory+2+(12*number_entries)) > (exif+length))
                   break;
-                offset=(size_t) ReadPropertyLong(endian,directory+2+(12*
-                  number_entries));
-                if ((offset != 0) && (offset < length) &&
+                offset=(ssize_t) ((int) ReadPropertyLong(endian,directory+2+(12*
+                  number_entries)));
+                if ((offset != 0) && ((size_t) offset < length) &&
                     (level < (MaxDirectoryStack-2)))
                   {
                     directory_stack[level].directory=exif+offset;
@@ -1476,6 +1493,7 @@ static MagickBooleanType GetEXIFProperty
           }
     }
   } while (level > 0);
+  exif_resources=DestroySplayTree(exif_resources);
   return(MagickTrue);
 }
 
@@ -1617,7 +1635,7 @@ static char *TracePSClippath(const unsig
   in_subpath=MagickFalse;
   while (length > 0)
   {
-    selector=(long) ReadPropertyMSBShort(&blob,&length);
+    selector=(long) ((int) ReadPropertyMSBShort(&blob,&length));
     switch (selector)
     {
       case 0:
@@ -1626,15 +1644,15 @@ static char *TracePSClippath(const unsig
         if (knot_count != 0)
           {
             blob+=24;
-            length-=24;
+            length-=MagickMin(24,(ssize_t) length);
             break;
           }
         /*
           Expected subpath length record.
         */
-        knot_count=(long) ReadPropertyMSBShort(&blob,&length);
+        knot_count=(long) ((int) ReadPropertyMSBShort(&blob,&length));
         blob+=22;
-        length-=22;
+        length-=MagickMin(22,(ssize_t) length);
         break;
       }
       case 1:
@@ -1648,7 +1666,7 @@ static char *TracePSClippath(const unsig
               Unexpected subpath knot
             */
             blob+=24;
-            length-=24;
+            length-=MagickMin(24,(ssize_t) length);
             break;
           }
         /*
@@ -1656,8 +1674,9 @@ static char *TracePSClippath(const unsig
         */
         for (i=0; i < 3; i++)
         {
-          y=(long) ReadPropertyMSBLong(&blob,&length);
-          x=(long) ReadPropertyMSBLong(&blob,&length);
+
+          y=(long) ((int) ReadPropertyMSBLong(&blob,&length));
+          x=(long) ((int) ReadPropertyMSBLong(&blob,&length));
           point[i].x=(double) x/4096/4096;
           point[i].y=1.0-(double) y/4096/4096;
         }
@@ -1739,7 +1758,7 @@ static char *TracePSClippath(const unsig
       default:
       {
         blob+=24;
-        length-=24;
+        length-=MagickMin(24,(ssize_t) length);
         break;
       }
     }
@@ -1804,7 +1823,7 @@ static char *TraceSVGClippath(const unsi
   in_subpath=MagickFalse;
   while (length != 0)
   {
-    selector=(long) ReadPropertyMSBShort(&blob,&length);
+    selector=(long) ((int) ReadPropertyMSBShort(&blob,&length));
     switch (selector)
     {
       case 0:
@@ -1813,15 +1832,15 @@ static char *TraceSVGClippath(const unsi
         if (knot_count != 0)
           {
             blob+=24;
-            length-=24;
+            length-=MagickMin(24,(ssize_t) length);
             break;
           }
         /*
           Expected subpath length record.
         */
-        knot_count=(long) ReadPropertyMSBShort(&blob,&length);
+        knot_count=(long) ((int) ReadPropertyMSBShort(&blob,&length));
         blob+=22;
-        length-=22;
+        length-=MagickMin(22,(ssize_t) length);
         break;
       }
       case 1:
@@ -1835,7 +1854,7 @@ static char *TraceSVGClippath(const unsi
               Unexpected subpath knot.
             */
             blob+=24;
-            length-=24;
+            length-=MagickMin(24,(ssize_t) length);
           }
         else
           {
@@ -1902,7 +1921,7 @@ static char *TraceSVGClippath(const unsi
       default:
       {
         blob+=24;
-        length-=24;
+        length-=MagickMin(24,(ssize_t) length);
         break;
       }
     }
